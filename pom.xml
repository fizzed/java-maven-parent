
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mfizz</groupId>
    <artifactId>mfz-maven-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.4</version>
    <name>mfz-maven-parent</name>
    <description>Parent pom for all mfizz projects</description>
    <url>http://code.google.com/p/mfz-maven-parent/</url>

    <inceptionYear>2012</inceptionYear>
  
    <organization>
        <name>mfizz</name>
        <url>http://mfizz.com</url>
    </organization>

    <prerequisites>
        <maven>2.2.1</maven>
    </prerequisites>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
  
    <scm>
        <url>http://code.google.com/p/mfz-maven-parent/source/browse/</url>
        <connection>scm:git:https://code.google.com/p/mfz-maven-parent/</connection>
    </scm>
    
    <developers>
        <!-- empty in parent pom -->
    </developers>

    <build>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <getRevisionOnlyOnce>false</getRevisionOnlyOnce>
                    <shortRevisionLength>8</shortRevisionLength>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <timestampFormat>{0,date,yyyyMMdd}</timestampFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals><goal>add-source</goal></goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/versioning</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.3</version>
                <configuration>
                    <verbose>false</verbose>
                    <addSvnKeyWords>false</addSvnKeyWords>
                    <licenseName>apache_v2</licenseName>
                    <excludes>
                        <exclude>**/Version.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>first</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <debug>true</debug>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifestFile>${commons.manifestfile}</manifestFile>
                        <manifestEntries>
                            <Built-By></Built-By>
                            <Specification-Title>${project.name}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Specification-Vendor>${project.organization.name}</Specification-Vendor>
                            <Implementation-Title>${project.name}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                            <Implementation-Build>${implementation.build}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <configuration>
                    <classpathScope>test</classpathScope>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>netbeans-freeform-maven-plugin</artifactId>
                <version>${netbeans-freeform-maven-plugin.version}</version>
                <configuration>
                    <additionalGoals>source:jar</additionalGoals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>${maven-eclipse-plugin.version}</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.build.outputDirectory}</directory>
                        </fileset>
                        <fileset>
                            <directory>build</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- for enabling for OSGi : based on Apache Commons Parent POM -->
            <!--
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.5</version>
                <extensions>true</extensions>
                <configuration>
                <archive> 
                    <forced>true</forced> 
                </archive>
                <excludeDependencies>true</excludeDependencies>
                <manifestLocation>target/osgi</manifestLocation>
                <instructions>
                    <_nouses>true</_nouses>
                    <Bundle-SymbolicName>${commons.osgi.symbolicName}</Bundle-SymbolicName>
                    <Export-Package>${commons.osgi.export}</Export-Package>
                    <Private-Package>${commons.osgi.private}</Private-Package>
                    <Import-Package>${commons.osgi.import}</Import-Package>
                    <DynamicImport-Package>${commons.osgi.dynamicImport}</DynamicImport-Package>
                </instructions>
                </configuration>
                <executions>
                <execution>
                    <id>bundle-manifest</id>
                    <phase>process-classes</phase>
                    <goals>
                    <goal>manifest</goal>
                    </goals>
                </execution>
                </executions>
            </plugin>
            -->

            <!-- generate Dependency.txt so it can be committed to source control  -->
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.5</version>
                <executions>
                <execution>
                    <id>list-dependencies</id>
                    <phase>compile</phase>
                    <goals>
                    <goal>tree</goal>
                    </goals>
                    <configuration>
                    <outputFile>Dependency.txt</outputFile>
                    </configuration>
                </execution>
                </executions>
            </plugin>
            -->
            <!-- generate Version.java automatically (but only if main.java.package is set) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.3</version>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                                <property name="package.name" value="${main.java.package}" />
                                <property name="src.dir" value="${project.build.directory}/generated-sources/versioning" />
                                <propertyregex property="package.dir" input="\${package.name}" defaultValue="" regexp="\." replace="/" casesensitive="false" override="true" />
                                <property name="build.timestamp" value="${maven.build.timestamp}" />
                                <property name="build.version" value="${project.version}" />
                                <property name="build.name" value="${project.artifactId}" />
                                <property name="build.vendor" value="${project.groupId}" />
                                <if>
                                    <equals arg1="${package.name}" arg2="" />
                                    <then>
                                        <echo message="#######################################################################################" />
                                        <echo message="The value of property package.name is not set: set main.java.package property in maven!" />
                                        <echo message="#######################################################################################" />
                                    </then>
                                    <else>
                                        <mkdir dir="${src.dir}/${package.dir}/"/>
                                        <echo file="${src.dir}/${package.dir}/Version.java" message="/** DO NOT EDIT THIS FILE. IT IS AUTO GENERATED BY MAVEN */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="package ${package.name};&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="public final class Version {&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String COMMIT=&quot;${buildNumber}&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String TIMESTAMP=&quot;${build.timestamp}&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String VERSION=&quot;${build.version}&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String NAME=&quot;${build.name}&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String VENDOR=&quot;${build.vendor}&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    private static final String LONG_VERSION=&quot;${build.version} (commit ${buildNumber} @ ${build.timestamp})&quot;;&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns the library source control commit tag such as &quot;${buildNumber}&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getCommit() { return COMMIT; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns the library vendor such as &quot;${build.vendor}&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getVendor() { return VENDOR; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns the library build timestamp (date) such as &quot;${build.timestamp}&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getTimestamp() { return TIMESTAMP; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns the library name such as &quot;${build.name}&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getName() { return NAME; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns the library version such as &quot;${build.version}&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getVersion() { return VERSION; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    /** Returns a longer library version that includes the timestamp such as &quot;${build.version} (commit ${buildNumber}; ts ${build.timestamp})&quot; */&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="    static public String getLongVersion() { return LONG_VERSION; }&#13;&#10;" />
                                        <echo file="${src.dir}/${package.dir}/Version.java" append="true" message="}${line.separator}" />
                                    </else>
                                </if>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <!-- Maven config -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <copyright.year>2012</copyright.year>
        <maven.test.skip>false</maven.test.skip>
        <maven.integration.skip>true</maven.integration.skip>
        <license.skip>false</license.skip>

        <!-- Maven plugin component versions -->
        <maven-release-plugin.version>2.1</maven-release-plugin.version>
        <maven-license-plugin.version>1.9.0</maven-license-plugin.version>
        <exec-maven-plugin.version>1.2</exec-maven-plugin.version>
        <netbeans-freeform-maven-plugin.version>2.0</netbeans-freeform-maven-plugin.version>
        <maven-eclipse-plugin.version>2.8</maven-eclipse-plugin.version>
        
        <!-- 3rd Party library dependency versions -->
        <main.java.package></main.java.package>
        <joda-time.version>[1.6,)</joda-time.version>
        <junit.version>[4.0,)</junit.version>
        <log4j.version>[1.2.13,)</log4j.version>
        <logback.version>[0.9,)</logback.version>
        <netty.version>[3.2,)</netty.version>
        <slf4j.version>[1.5.0,)</slf4j.version>
    
        <!-- Configuration properties for the OSGi maven-bundle-plugin -->
        <commons.osgi.symbolicName>${project.groupId}.${project.artifactId}</commons.osgi.symbolicName>
        <commons.osgi.export>*;version=${project.version};-noimport:=true</commons.osgi.export>
        <commons.osgi.import>*</commons.osgi.import>
        <commons.osgi.dynamicImport />
        <commons.osgi.private />

        <!-- location of any manifest file used by maven-jar-plugin -->
        <!--<commons.manifestfile>target/osgi/MANIFEST.MF</commons.manifestfile>-->
    </properties>
</project>